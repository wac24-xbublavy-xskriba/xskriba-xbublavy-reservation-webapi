/*
 * Reservation Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Contact: xbublavy@stuba.sk
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

 package reservation

import (
   "net/http"

   "github.com/gin-gonic/gin"
)

type ReservationAPI interface {

   // internal registration of api routes
   addRoutes(routerGroup *gin.RouterGroup)

    // DeleteReservation - Deletes a reservation
   DeleteReservation(ctx *gin.Context)

    // GetReservationById - Get a reservation by ID
   GetReservationById(ctx *gin.Context)

    // UpdateReservation - Update an existing reservation
   UpdateReservation(ctx *gin.Context)

 }

 // partial implementation of ReservationAPI - all functions must be implemented in add on files
type implReservationAPI struct {

}

func newReservationAPI() ReservationAPI {
  return &implReservationAPI{}
}

func (this *implReservationAPI) addRoutes(routerGroup *gin.RouterGroup) {
  routerGroup.Handle( http.MethodDelete, "/reservations/:reservationId", this.DeleteReservation)
  routerGroup.Handle( http.MethodGet, "/reservations/:reservationId", this.GetReservationById)
  routerGroup.Handle( http.MethodPut, "/reservations/:reservationId", this.UpdateReservation)
}

// Copy following section to separate file, uncomment, and implement accordingly
// // DeleteReservation - Deletes a reservation
// func (this *implReservationAPI) DeleteReservation(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // GetReservationById - Get a reservation by ID
// func (this *implReservationAPI) GetReservationById(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // UpdateReservation - Update an existing reservation
// func (this *implReservationAPI) UpdateReservation(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//

